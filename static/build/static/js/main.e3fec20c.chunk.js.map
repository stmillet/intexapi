{"version":3,"sources":["serviceWorker.js","context.js","Header.js","Footer.js","campaign-card.js","Home.js","Left.js","campaign-details.js","about.js","help.js","LoginForm.js","SignupForm.js","LogoutPage.js","predict.js","App.js","context-provider.js","index.js"],"names":["Boolean","window","location","hostname","match","AppContext","React","createContext","Header","props","context","useContext","history","useHistory","logged_out_nav","variant","expand","to","className","Brand","src","alt","height","Collapse","id","logged_in_nav","initialValues","title","validateOnChange","validateOnBlur","validate","values","onSubmit","actions","a","axios","get","then","response","console","log","data","setCampaigns","push","error","form","name","rProps","Control","type","aria-label","aria-describedby","placeholder","field","Append","isSubmitting","role","aria-hidden","username","alignright","style","color","Item","Divider","onClick","handle_logout","logged_in","Footer","CampaignCard","percent","parseFloat","camp","current_amount","goal","toFixed","c_rating","Toggle","as","bs","eventKey","width","aria-valuenow","parseInt","aria-valuemin","aria-valuemax","Body","description","substring","donators","status","currencycode","trim","avg_donation","campaign_hearts","social_share_total","Home","useState","show","setShow","handleClose","handleShow","title2","deactivated","current_amount_start","current_amount_end","goal_start","goal_end","auto_fb_post_mode","days_active_start","days_active_end","location_country","donators_start","donators_end","avg_donation_start","avg_donation_end","has_beneficiary","is_charity","charity_valid","campaign_hearts_start","campaign_hearts_end","social_share_total_start","social_share_total_end","errors","Row","onHide","closeButton","Title","Group","controlId","Label","value","meta","touched","Text","resetForm","handleSubmit","num_camps","campaigns","map","campaign","index","key","Input","disabled","disable","Left","Nav","defaultActiveKey","CampaignDetail","cid","useParams","c","find","p","days_active","text","maxValue","background","circleRatio","backgroundPadding","styles","buildStyles","backgroundColor","textColor","pathColor","trailColor","textSize","About","md","process","roundedCircle","Help","LoginForm","LoginController","theError","setError","password","post","localStorage","setItem","token","user","second","login","SignupForm","SignupController","confirmpass","first_name","last_name","signup","Logout","Predict","PredictController","theScore","donor","avg_donor","document","getElementById","innerHTML","amount","scrollTo","body","scrollHeight","Check","inline","App","fluid","noGutters","path","component","AppProvider","length","setState","state","produce","draft","removeItem","display_form","displayed_form","getItem","this","fetch","headers","Authorization","res","json","Provider","Component","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e3fec20c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\n\r\nconst AppContext = React.createContext()\r\nexport default AppContext","import React from 'react';\r\nimport * as bs from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport AppContext from './context'\r\nimport {Formik, Form, Field} from 'formik'\r\nimport axios from 'axios'\r\n\r\nfunction Header(props) {\r\n  const context = React.useContext(AppContext)\r\n  const history = useHistory()\r\n  const handleClick = () => {\r\n    context.handle_logout()\r\n    history.push('/logout')\r\n  }\r\n\r\n  const logged_out_nav = (\r\n    <bs.Navbar variant='dark' expand='lg'>\r\n    <Link to=\"/\" className='navLink'>\r\n        <bs.Navbar.Brand>\r\n            <img src={`/favicon.svg`} alt='logo' height='45'></img>\r\n                &nbsp;&nbsp;&nbsp; Intex II\r\n        </bs.Navbar.Brand>\r\n    </Link>\r\n    {/* <bs.Navbar.Toggle aria-controls='basic-navbar-nav'/> */}\r\n    <bs.Navbar.Collapse id='responsive-navbar-nav'>\r\n        <bs.Nav className='mr-auto'>\r\n            <bs.NavItem className='nav-link'>\r\n                <Link to='/' className='nav-link'>Home</Link>\r\n            </bs.NavItem>\r\n            <bs.NavItem className='nav-link'>\r\n                <Link to='/about' className='nav-link'>About</Link>\r\n            </bs.NavItem>\r\n            <bs.NavItem className='nav-link'>\r\n                <Link to='/help' className='nav-link'>Help</Link>\r\n            </bs.NavItem>\r\n        </bs.Nav>\r\n        <bs.Nav className='ml-auto'>\r\n            <bs.NavItem className='nav-link'>\r\n                <Link to='/signup' className='nav-link'>Create Account</Link>\r\n            </bs.NavItem>\r\n            <bs.NavItem className='nav-link'>\r\n                <Link to='/login' className='nav-link'>Login</Link>\r\n            </bs.NavItem>\r\n        </bs.Nav>\r\n    </bs.Navbar.Collapse>\r\n    </bs.Navbar>\r\n  )\r\n\r\n  const logged_in_nav = (\r\n    <bs.Navbar variant='dark' expand='lg'>\r\n    <Link to=\"/\" className='navLink'>\r\n        <bs.Navbar.Brand>\r\n            <img src='favicon.svg' alt='logo' height='45'></img>\r\n                &nbsp;&nbsp;&nbsp; Intex II\r\n        </bs.Navbar.Brand>\r\n    </Link>\r\n    {/* <bs.Navbar.Toggle aria-controls='basic-navbar-nav'/> */}\r\n    <bs.Navbar.Collapse id='responsive-navbar-nav'>\r\n        <bs.Nav className='mr-auto'>\r\n            <bs.NavItem className='nav-link'>\r\n                <Link to='/' className='nav-link'>Home</Link>\r\n            </bs.NavItem>\r\n            <bs.NavItem className='nav-link'>\r\n                <Link to='/about' className='nav-link'>About</Link>\r\n            </bs.NavItem>\r\n            <bs.NavItem className='nav-link'>\r\n                <Link to='/help' className='nav-link'>Help</Link>\r\n            </bs.NavItem>\r\n        </bs.Nav>\r\n        <bs.Nav className='ml-auto'>\r\n            <bs.NavItem className='navbar'>\r\n            <Formik\r\n                initialValues={{\r\n                    title: ''\r\n                }}\r\n                validateOnChange={false}\r\n                validateOnBlur={false}\r\n                validate={values => {\r\n                    const errors = {}\r\n                    return errors\r\n                }}\r\n                onSubmit={async (values, actions) => {\r\n                    await axios.get('/api/campaigns/?title=' + values.title)\r\n                    .then((response) => {\r\n                        console.log(response.data)\r\n                        context.setCampaigns(response.data)\r\n                        history.push('/')\r\n                    }, (error) => {\r\n                        console.log('hello')\r\n                    }\r\n                        \r\n                    )}}\r\n                    >{form => (\r\n                        <Form>\r\n                            <bs.InputGroup>\r\n                                <Field name='title'>{rProps => (\r\n                                        <bs.Form.Control\r\n                                            type='text'\r\n                                            aria-label=\"Search Titles\"\r\n                                            aria-describedby=\"basic-addon2\"\r\n                                            placeholder='Search Campaign Titles'\r\n                                            {...rProps.field}\r\n                                        />\r\n                                )}</Field>\r\n                                <bs.InputGroup.Append>\r\n                                <bs.Button variant=\"outline-light\" type='submit' id='basic-addon2'>\r\n                                    {(form.isSubmitting ? <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> : <span></span>)} \r\n                                    Search\r\n                                </bs.Button>\r\n                                </bs.InputGroup.Append>\r\n                            </bs.InputGroup>\r\n                        </Form>\r\n                    )}\r\n\r\n            </Formik>\r\n            </bs.NavItem>\r\n            <bs.NavDropdown title={`Welcome ${context.username}`} alignright='true' id='collapsible-nav-dropdown' className='mr-sm-2 navbar' style={{color: 'white'}}>\r\n                <bs.NavDropdown.Item>My Account</bs.NavDropdown.Item>\r\n                <bs.NavDropdown.Divider/>\r\n                <bs.NavDropdown.Item onClick={handleClick}>Logout</bs.NavDropdown.Item>\r\n            </bs.NavDropdown>\r\n        </bs.Nav>\r\n    </bs.Navbar.Collapse>\r\n    </bs.Navbar>\r\n  )\r\n    return (\r\n        <div>{context.logged_in ? logged_in_nav : logged_out_nav}</div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default function Footer(props) {\r\n    return (\r\n        <footer className='m-3 text-center'>\r\n            Intex II | Group 1-10 &copy; 2020\r\n        </footer>\r\n    );\r\n}","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n// import AppContext from './context'\r\n\r\nexport default function CampaignCard(props) {\r\n    // const context = React.useContext(AppContext)\r\n    // increment key each time you do another card\r\n    const percent = parseFloat((props.camp.current_amount / props.camp.goal) * 100).toFixed(2)\r\n\r\n    let color = ''\r\n    if (props.camp.c_rating < 5) {\r\n        color = '#FF0000'\r\n    }\r\n    else if (props.camp.c_rating < 6) {\r\n        color = '#FF8C00'\r\n    }\r\n    else if (props.camp.c_rating < 7) {\r\n        color = '#FFC72B'\r\n    }\r\n    else if (props.camp.c_rating >= 7) {\r\n        color = '#008000'\r\n    }\r\n\r\n    return (\r\n        <bs.Card>\r\n            <bs.Card.Header>\r\n                <bs.Accordion.Toggle as={bs.Button} variant=\"link\" eventKey={props.eventKey}>\r\n                    <b>{props.camp.title}</b>\r\n                </bs.Accordion.Toggle>\r\n                <div className='float-right' style={{width: '25%'}}>\r\n                    <div></div>\r\n                    <div className=\"progress\">\r\n                        <div className=\"progress-bar bg-success\" role=\"progressbar\" style={{width: `${percent}%`}} aria-valuenow={parseInt(percent)} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                    </div>\r\n                    <div className='text-center'><small><b>{percent}% of Goal</b></small></div>\r\n                </div>\r\n                <div className='float-right mr-3'>Score: <strong style={{color: color}}>{props.camp.c_rating}</strong></div>\r\n            </bs.Card.Header>\r\n            <bs.Accordion.Collapse eventKey={props.eventKey}>\r\n                <bs.Card.Body>\r\n                    <div className='row'>\r\n                        <div className='col-md-4'>\r\n                            <b>Description:</b> {props.camp.description.substring(0,150)}...\r\n                        </div>\r\n                        <div className='col-md-4'>\r\n                            <b>Goal Amount:</b> {props.camp.goal}\r\n                            <br/><br/>\r\n                            <b># Donors:</b> {props.camp.donators}\r\n                        </div>\r\n                        <div className='col-md-4'>\r\n                            <b>Current Amount Raised:</b> {props.camp.current_amount}\r\n                            <br/><br/>\r\n                            <b>Status:</b> {props.camp.status === 1 ? 'Active' : 'Inactive'}\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <div className='row'>\r\n                        <div className='col-md-4'>\r\n                            <b>Currency:</b> {props.camp.currencycode.trim()}\r\n                            <br/><br/>\r\n                            <b>Average Donation Amount:</b> {props.camp.avg_donation}\r\n                        </div>\r\n                        <div className='col-md-4'>\r\n                            <b># Campaign Hearts:</b> {props.camp.campaign_hearts}\r\n                        </div>\r\n                        <div className='col-md-4'>\r\n                            <b># Shares:</b> {props.camp.social_share_total}\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <div className='row'>\r\n                        <div className='col-md-4'></div>\r\n                        <div className='col-md-4'></div>\r\n                        <div className='col-md-4'>\r\n                            <Link to={`/campaign/${props.camp.id}`} className='float-right'>More Details</Link>\r\n                        </div>\r\n                    </div>\r\n                </bs.Card.Body>\r\n            </bs.Accordion.Collapse>\r\n        </bs.Card>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport CampaignCard from './campaign-card';\r\nimport AppContext from './context'\r\nimport {Formik, Form, Field} from 'formik'\r\nimport axios from 'axios'\r\nimport {useHistory} from 'react-router'\r\n\r\nexport default function Home(props) {\r\n    const context = React.useContext(AppContext)\r\n    const history = useHistory()\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <h1 className='text-center'>GoFundMe<small>&reg;</small> Campaigns</h1>\r\n            \r\n            <br/>\r\n\r\n            <h3>Search Campaigns</h3>\r\n            <Formik\r\n                initialValues={{\r\n                    title: '',\r\n                    title2: '',\r\n                    description: '',\r\n                    currencycode: '',\r\n                    deactivated: '',\r\n                    status: '',\r\n                    current_amount_start: '',\r\n                    current_amount_end: '',\r\n                    goal_start: '',\r\n                    goal_end: '',\r\n                    auto_fb_post_mode: '',\r\n                    days_active_start: '',\r\n                    days_active_end: '',\r\n                    location_country: '',\r\n                    c_rating: '',\r\n                    donators_start: '',\r\n                    donators_end: '',\r\n                    avg_donation_start: '',\r\n                    avg_donation_end: '',\r\n                    has_beneficiary: '',\r\n                    is_charity: '',\r\n                    charity_valid: '',\r\n                    campaign_hearts_start: '',\r\n                    campaign_hearts_end: '',\r\n                    social_share_total_start: '',\r\n                    social_share_total_end: ''\r\n                }}\r\n                validateOnChange={false}\r\n                validateOnBlur={false}\r\n                validate={values => {\r\n                    console.log('status', values.status)\r\n                    const errors = {}\r\n                    if(values.title !== '' && values.title2 !== '') {\r\n                        errors.title2 = 'You cannot have values in both titles'\r\n                    }\r\n                    let start = parseInt(values.goal_start)\r\n                    let end = parseInt(values.goal_end)\r\n                    if(start > end) {\r\n                        errors.goal_end = 'High amount must be higher than the Low'\r\n                    }\r\n                    if(values.days_active_start > values.days_active_end) {\r\n                        errors.days_active_end = 'High amount must be higher than the Low'\r\n                    }\r\n                    if(values.donators_start > values.donators_end) {\r\n                        errors.donators_end = 'High amount must be higher than the Low'\r\n                    }\r\n                    if(values.avg_donation_start > values.avg_donation_end) {\r\n                        errors.avg_donation_end = 'High amount must be higher than the Low'\r\n                    }\r\n                    if(values.campaign_hearts_start > values.campaign_hearts_end) {\r\n                        errors.campaign_hearts_end = 'High amount must be higher than the Low'\r\n                    }\r\n                    if(values.social_share_total_start > values.social_share_total_end) {\r\n                        errors.social_share_total_end = 'High amount must be higher than the Low'\r\n                    }\r\n                    if((values.goal_start === '' && values.goal_end !== '') || (values.goal_start !== '' && values.goal_end === '')) {\r\n                        errors.goal_end = 'One field is not populated'\r\n                    }\r\n                    if((values.days_active_start === '' && values.days_active_end !== '') || (values.days_active_start !== '' && values.days_active_end === '')) {\r\n                        errors.days_active_end = 'One field is not populated'\r\n                    }\r\n                    if((values.donators_start === '' && values.donators_end !== '') || (values.donators_start !== '' && values.donators_end === '')) {\r\n                        errors.donators_end = 'One field is not populated'\r\n                    }\r\n                    if((values.avg_donation_start === '' && values.avg_donation_end !== '') || (values.avg_donation_start !== '' && values.avg_donation_end === '')) {\r\n                        errors.avg_donation_end = 'One field is not populated'\r\n                    }\r\n                    if((values.campaign_hearts_start === '' && values.campaign_hearts_end !== '') || (values.campaign_hearts_start !== '' && values.campaign_hearts_end === '')) {\r\n                        errors.campaign_hearts_end = 'One field is not populated'\r\n                    }\r\n                    if((values.social_share_total_start === '' && values.social_share_total_end !== '') || (values.social_share_total_start !== '' && values.social_share_total_end === '')) {\r\n                        errors.social_share_total_end = 'One field is not populated'\r\n                    }\r\n                    return errors\r\n                }}\r\n                onSubmit={async (values, actions) => {\r\n                    await axios.get(`/api/campaigns/?title=${values.title}&title2=${values.title2}&description=${values.description}&currencycode=${values.currencycode}&status=${values.status}&current_amount_start=${values.current_amount_start}&current_amount_end=${values.current_amount_end}&goal_start=${values.goal_start}&goal_end=${values.goal_end}&auto_fb_post_mode=${values.auto_fb_post_mode}&days_active_start=${values.days_active_start}&days_active_end=${values.days_active_end}&location_country=${values.location_country}&c_rating=${values.c_rating}&donators_start=${values.donators_start}&donators_end=${values.donators_end}&avg_donation_start=${values.avg_donation_start}&avg_donation_end=${values.avg_donation_end}&has_beneficiary=${values.has_beneficiary}&is_charity=${values.is_charity}&charity_valid=${values.charity_valid}&campaign_hearts_start=${values.campaign_hearts_start}&campaign_hearts_end=${values.campaign_hearts_end}&social_share_total_start=${values.social_share_total_start}&social_share_total_end=${values.social_share_total_end}`)\r\n\r\n                    .then((response) => {\r\n                        console.log(response.data)\r\n                        context.setCampaigns(response.data)\r\n                        history.push('/')\r\n                    }, (error) => {\r\n                        console.log('hello')\r\n                    }\r\n                        \r\n                    )}}\r\n                    >{form => (\r\n                        <Form>\r\n                            <bs.Form.Row>\r\n                            <div className='col-sm-7'>\r\n                                <bs.InputGroup>\r\n                                    <Field name='title'>{rProps => (\r\n                                        <bs.Form.Control\r\n                                            type='text'\r\n                                            aria-label=\"Search Titles\"\r\n                                            aria-describedby=\"basic-addon2\"\r\n                                            placeholder='Title'\r\n                                            {...rProps.field}\r\n                                        />\r\n                                    )}</Field>\r\n                                    <bs.InputGroup.Append>\r\n                                        <bs.Button variant=\"success\" type='submit' id='basic-addon2'>\r\n                                            {(form.isSubmitting ? <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> : <span></span>)} \r\n                                            Search\r\n                                        </bs.Button>\r\n                                    </bs.InputGroup.Append>\r\n                                    <bs.InputGroup.Append>\r\n                                        {/* <bs.ButtonGroup className=\"ml-md-3\" >\r\n                                            <bs.Button variant='success' type='submit'>\r\n                                                {(form.isSubmitting ? <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> : <span></span>)} \r\n                                                Search\r\n                                            </bs.Button>\r\n                                            <bs.Button variant='outline-success' onClick={handleShow}>Advanced Search</bs.Button>\r\n                                        </bs.ButtonGroup> */}\r\n                                        <bs.Button variant=\"outline-success\" onClick={handleShow} id='basic-addon2'>\r\n                                            Advanced Search\r\n                                        </bs.Button>\r\n                                    </bs.InputGroup.Append>\r\n                                </bs.InputGroup>\r\n                            </div>\r\n                            </bs.Form.Row>\r\n                            <bs.Modal show={show} onHide={handleClose}>\r\n                                <bs.Modal.Header closeButton>\r\n                                    <bs.Modal.Title>Leave Field Blank For All</bs.Modal.Title>\r\n                                </bs.Modal.Header>\r\n                                <bs.Modal.Body>\r\n                                <bs.Form.Group controlId='title2'>\r\n                                    <bs.Form.Label>Title</bs.Form.Label>\r\n                                    <Input \r\n                                        type='text'\r\n                                        placeholder=\"Enter Title\"\r\n                                        name='title2'/>\r\n                                </bs.Form.Group>\r\n                                <bs.Form.Group controlId='description'>\r\n                                    <bs.Form.Label>Description</bs.Form.Label>\r\n                                    <Input \r\n                                        type='text'\r\n                                        placeholder='Enter Description'\r\n                                        name='description'/>\r\n                                </bs.Form.Group>\r\n                                <bs.Form.Row>\r\n                                    <bs.Form.Group>\r\n                                        <bs.Form.Label>Currency</bs.Form.Label>\r\n                                        <br></br>\r\n                                        <Field \r\n                                            name='currencycode' \r\n                                            as='select'>\r\n                                            \r\n\r\n                                            <option value=''></option>\r\n                                            <option value='USD'>USD</option>\r\n                                            <option value='CAD'>CAD</option>\r\n                                            <option value='GBP'>GBP</option>\r\n                                            <option value='EUR'>EUR</option>\r\n                                            <option value='AUD'>AUD</option>\r\n                                            <option value='CHF'>CHF</option>\r\n                                            <option value='SEK'>SEK</option>\r\n                                            <option value='DKK'>DKK</option>\r\n                                            <option value='NOK'>NOK</option>\r\n                                            {rProps => (\r\n                                        \r\n                                            rProps.meta.touched && rProps.meta.error &&\r\n                                                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n                                            \r\n                                            )}</Field>\r\n                                        </bs.Form.Group>\r\n                                        <bs.Form.Group className='ml-md-5'>\r\n                                        <bs.Form.Label>Deactivated</bs.Form.Label>\r\n                                        <br></br>\r\n                                        <Field \r\n                                            name='deactivated' \r\n                                            as='select'>\r\n                                            <option value=''></option>\r\n                                            <option value='1'>Yes</option>\r\n                                            <option value='0'>No</option>\r\n                                            \r\n                                            {rProps => (\r\n                                        \r\n                                            rProps.meta.touched && rProps.meta.error &&\r\n                                                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n                                            \r\n                                            )}</Field>\r\n                                        </bs.Form.Group> \r\n                                        <bs.Form.Group className='ml-md-5'>\r\n                                        <bs.Form.Label>Status</bs.Form.Label>\r\n                                        <br></br>\r\n                                        <Field \r\n                                            name='status' \r\n                                            as='select'>\r\n                                            <option value=''></option>\r\n                                            <option value='1'>Active</option>\r\n                                            <option value='0'>Inactive</option>\r\n                                            \r\n                                            {rProps => (\r\n                                        \r\n                                            rProps.meta.touched && rProps.meta.error &&\r\n                                                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n                                            \r\n                                            )}</Field>\r\n                                        </bs.Form.Group> \r\n                                    </bs.Form.Row>\r\n                                    <bs.Form.Row>\r\n                                        <bs.Form.Group className='mr-md-3'controlId='current_amount'>\r\n                                            <bs.Form.Label>Amount Raised</bs.Form.Label>\r\n                                            <Input \r\n                                                type='text'\r\n                                                placeholder='Amount Low'\r\n                                                name='current_amount_start'/>\r\n                                            <Input \r\n                                                type='text'\r\n                                                placeholder='Amount High'\r\n                                                name='current_amount_end'/>\r\n                                            <bs.Form.Text className=\"text-muted\">\r\n                                            Search for a range\r\n                                            </bs.Form.Text>\r\n                                        </bs.Form.Group>\r\n                                        <bs.Form.Group className='ml-md-3'controlId='current_amount'>\r\n                                            <bs.Form.Label>Goal</bs.Form.Label>\r\n                                            <Input \r\n                                                type='text'\r\n                                                placeholder='Goal Low'\r\n                                                name='goal_start'/>\r\n                                            <Input \r\n                                                type='text'\r\n                                                placeholder='Goal High'\r\n                                                name='goal_end'/>\r\n                                            <bs.Form.Text className=\"text-muted\">\r\n                                            Search for a range\r\n                                            </bs.Form.Text>\r\n                                        </bs.Form.Group>\r\n                                    </bs.Form.Row>\r\n                                    <bs.Form.Row>\r\n                                    <bs.Form.Group className='ml-md-5'>\r\n                                        <bs.Form.Label>Status</bs.Form.Label>\r\n                                        <br></br>\r\n                                        <Field \r\n                                            name='auto_fb_post_mode' \r\n                                            as='select'>\r\n                                            <option value=''></option>\r\n                                            <option value='1'>Yes</option>\r\n                                            <option value='0'>No</option>\r\n                                            \r\n                                            {rProps => (\r\n                                        \r\n                                            rProps.meta.touched && rProps.meta.error &&\r\n                                                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n                                            \r\n                                            )}</Field>\r\n                                        </bs.Form.Group>\r\n                                        <bs.Form.Group className='ml-xl-5'controlId='days_active'>\r\n                                            <bs.Form.Label>Days Active</bs.Form.Label>\r\n                                            <Input \r\n                                                type='text'\r\n                                                placeholder='Days Active Low'\r\n                                                name='days_active_start'/>\r\n                                            <Input \r\n                                                type='text'\r\n                                                placeholder='Days Active High'\r\n                                                name='days_active_end'/>\r\n                                            <bs.Form.Text className=\"text-muted\">\r\n                                            Search for a range\r\n                                            </bs.Form.Text>\r\n                                        </bs.Form.Group>\r\n                                    </bs.Form.Row>\r\n                                    <bs.Form.Row>\r\n                                        <bs.Form.Group controlId='location_country'>\r\n                                            <bs.Form.Label>Country</bs.Form.Label>\r\n                                            <Input \r\n                                                type='text'\r\n                                                placeholder=\"Enter Country\"\r\n                                                name='location_country'/>\r\n                                            <bs.Form.Text className=\"text-muted\">\r\n                                            Leave Blank to search off other attributes.\r\n                                            </bs.Form.Text>\r\n                                        </bs.Form.Group>\r\n                                        <bs.Form.Group className='ml-md-3'>\r\n                                        <bs.Form.Label>Our Score</bs.Form.Label>\r\n                                        <br></br>\r\n                                        <Field \r\n                                            name='c_rating' \r\n                                            as='select'>\r\n                                            <option value=''></option>\r\n                                            <option value='0'>0</option>\r\n                                            <option value='0.5'>0.5</option>\r\n                                            <option value='1'>1</option>\r\n                                            <option value='1.5'>1.5</option>\r\n                                            <option value='2'>2</option>\r\n                                            <option value='2.5'>2.5</option>\r\n                                            <option value='3'>3</option>\r\n                                            <option value='3.5'>3.5</option>\r\n                                            <option value='4'>4</option>\r\n                                            <option value='4.5'>4.5</option>\r\n                                            <option value='5'>5</option>\r\n                                            <option value='5.5'>5.5</option>\r\n                                            <option value='6'>6</option>\r\n                                            <option value='6.5'>6.5</option>\r\n                                            <option value='7'>7</option>\r\n                                            <option value='7.5'>7.5</option>\r\n                                            <option value='8'>8</option>\r\n                                            <option value='8.5'>8.5</option>\r\n                                            <option value='9'>9</option>\r\n                                            <option value='9.5'>9.5</option>\r\n                                            <option value='10'>10</option>\r\n                                            {rProps => (\r\n                                        \r\n                                            rProps.meta.touched && rProps.meta.error &&\r\n                                                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n                                            \r\n                                            )}</Field>\r\n                                        </bs.Form.Group>         \r\n                                    </bs.Form.Row>\r\n                                    <bs.Form.Row>\r\n                                        <bs.Form.Group className='mr-md-3'controlId='donators'>\r\n                                            <bs.Form.Label>Donators</bs.Form.Label>\r\n                                            <Input \r\n                                                type='text'\r\n                                                placeholder='Donators Low'\r\n                                                name='donators_start'/>\r\n                                            <Input \r\n                                                type='text'\r\n                                                placeholder='Donators High'\r\n                                                name='donators_end'/>\r\n                                            <bs.Form.Text className=\"text-muted\">\r\n                                            Search for a range\r\n                                            </bs.Form.Text>\r\n                                        </bs.Form.Group>\r\n                                        <bs.Form.Group className='ml-md-3'controlId='avg_donation'>\r\n                                            <bs.Form.Label>Average Donations</bs.Form.Label>\r\n                                            <Input \r\n                                                type='text'\r\n                                                placeholder='Average Low'\r\n                                                name='avg_donation_start'/>\r\n                                            <Input \r\n                                                type='text'\r\n                                                placeholder='Average High'\r\n                                                name='avg_donation_end'/>\r\n                                            <bs.Form.Text className=\"text-muted\">\r\n                                            Search for a range\r\n                                            </bs.Form.Text>\r\n                                        </bs.Form.Group>\r\n                                    </bs.Form.Row>\r\n                                    <bs.Form.Row>\r\n                                    <bs.Form.Group className='ml-md-5'>\r\n                                        <bs.Form.Label>Has Beneficiary</bs.Form.Label>\r\n                                        <br></br>\r\n                                        <Field \r\n                                            name='has_beneficiary' \r\n                                            as='select'>\r\n                                            <option value=''></option>\r\n                                            <option value='1'>Yes</option>\r\n                                            <option value='0'>No</option>\r\n                                            \r\n                                            {rProps => (\r\n                                        \r\n                                            rProps.meta.touched && rProps.meta.error &&\r\n                                                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n                                            \r\n                                            )}</Field>\r\n                                        </bs.Form.Group>\r\n                                        <bs.Form.Group className='ml-md-5'>\r\n                                        <bs.Form.Label>Is For Charity</bs.Form.Label>\r\n                                        <br></br>\r\n                                        <Field \r\n                                            name='is_charity' \r\n                                            as='select'>\r\n                                            <option value=''></option>\r\n                                            <option value='1'>Yes</option>\r\n                                            <option value='0'>No</option>\r\n                                            \r\n                                            {rProps => (\r\n                                        \r\n                                            rProps.meta.touched && rProps.meta.error &&\r\n                                                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n                                            \r\n                                            )}</Field>\r\n                                        </bs.Form.Group>\r\n                                        <bs.Form.Group className='ml-md-5'>\r\n                                        <bs.Form.Label>Valid Charity</bs.Form.Label>\r\n                                        <br></br>\r\n                                        <Field \r\n                                            name='charity_valid' \r\n                                            as='select'>\r\n                                            <option value=''></option>\r\n                                            <option value='1'>Yes</option>\r\n                                            <option value='0'>No</option>\r\n                                            \r\n                                            {rProps => (\r\n                                        \r\n                                            rProps.meta.touched && rProps.meta.error &&\r\n                                                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n                                            \r\n                                            )}</Field>\r\n                                        </bs.Form.Group> \r\n                                    </bs.Form.Row>\r\n                                    <bs.Form.Row>\r\n                                        <bs.Form.Group className='mr-md-3'controlId='campaign_hearts'>\r\n                                            <bs.Form.Label>Number of Hearts</bs.Form.Label>\r\n                                            <Input \r\n                                                type='text'\r\n                                                placeholder='Hearts Low'\r\n                                                name='campaign_hearts_start'/>\r\n                                            <Input \r\n                                                type='text'\r\n                                                placeholder='Hearts High'\r\n                                                name='campaign_hearts_end'/>\r\n                                            <bs.Form.Text className=\"text-muted\">\r\n                                            Search for a range\r\n                                            </bs.Form.Text>\r\n                                        </bs.Form.Group>\r\n                                        <bs.Form.Group className='ml-md-3'controlId='social_share_total'>\r\n                                            <bs.Form.Label>Social Media Shares</bs.Form.Label>\r\n                                            <Input \r\n                                                type='text'\r\n                                                placeholder='Shares Low'\r\n                                                name='social_share_total_start'/>\r\n                                            <Input \r\n                                                type='text'\r\n                                                placeholder='Shares High'\r\n                                                name='social_share_total_end'/>\r\n                                            <bs.Form.Text className=\"text-muted\">\r\n                                            Search for a range\r\n                                            </bs.Form.Text>\r\n                                        </bs.Form.Group>\r\n                                    </bs.Form.Row>\r\n                                \r\n                                </bs.Modal.Body>\r\n                                <bs.Modal.Footer>\r\n                                    {console.log(form)}\r\n                                <bs.Button variant=\"secondary\" onClick={() => {handleClose(); form.resetForm()}}>\r\n                                    Close\r\n                                </bs.Button>\r\n                                <bs.Button variant=\"success\" onClick={() => {form.handleSubmit(); handleClose()}}>\r\n                                    {(form.isSubmitting ? <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span> : <span></span>)} \r\n                                    Search\r\n                                </bs.Button>\r\n                                </bs.Modal.Footer>\r\n                            </bs.Modal>\r\n                        </Form>\r\n                    )}\r\n            </Formik>\r\n            <div className='float-right'>Number of Results: {context.num_camps}</div>\r\n            \r\n            <br/>\r\n\r\n            <bs.Accordion>\r\n                {context.campaigns.map((campaign, index) => (\r\n                    <CampaignCard camp={campaign} eventKey={index} key={index} />   \r\n                ))}\r\n            </bs.Accordion>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Input = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <bs.Form.Control\r\n                type={props.type}\r\n                aria-label=\"Search Titles\"\r\n                aria-describedby=\"basic-addon2\"\r\n                placeholder={props.placeholder}\r\n                disabled={props.disable}\r\n                {...rProps.field}\r\n            />\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)\r\n","import React from 'react';\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Left(props) {    \r\n\r\n    return (\r\n        <Nav defaultActiveKey='/home' className='flex-column'>\r\n            <br/>\r\n            <Link to='/' className='mb-3'>Home</Link>\r\n            <Link to='/predict' className='mb-3'>Prediction Calculator</Link>\r\n        </Nav>\r\n    );\r\n}","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport AppContext from './context'\r\nimport * as bs from 'react-bootstrap'\r\nimport {CircularProgressbar, buildStyles} from 'react-circular-progressbar'\r\n\r\nexport default function CampaignDetail(props) {\r\n    const context = React.useContext(AppContext)\r\n\r\n    const {cid} = useParams()\r\n\r\n    const c = context.campaigns.find(c => c.id === parseInt(cid))\r\n\r\n    if (!context.campaigns.find(p => p.id === parseInt(cid))) {\r\n        return <h2 className='mt-3'>Not found</h2>\r\n    }\r\n    let color = ''\r\n    if (c.c_rating < 5) {\r\n        color = '#FF0000'\r\n    }\r\n    else if (c.c_rating < 6) {\r\n        color = '#FF8C00'\r\n    }\r\n    else if (c.c_rating < 7) {\r\n        color = '#FFC72B'\r\n    }\r\n    else if (c.c_rating >= 7) {\r\n        color = '#008000'\r\n    }\r\n        return (\r\n            <>\r\n                <h1>{c.title}</h1>\r\n                <h3 style={{color: '#6E7E85'}}>Campaign Details</h3>\r\n                <hr/>\r\n                <table className='table table-borderless'>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Description: </th>\r\n                                <td>{c.description}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <bs.Container>\r\n                    <bs.Row>\r\n                        <bs.Col>\r\n                            <table className='table table-borderless'>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th>Goal Amount: </th>\r\n                                            <td>{c.goal}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Amount Raised: </th>\r\n                                            <td>{c.current_amount}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th># Donors: </th>\r\n                                            <td>{c.donators}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Average Donation: </th>\r\n                                            <td>{c.avg_donation}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Currency: </th>\r\n                                            <td>{c.currencycode}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Country: </th>\r\n                                            <td>{c.location_country}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Status: </th>\r\n                                            <td>{c.status === 1 ? 'Active' : 'Inactive'}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </bs.Col>\r\n                        <bs.Col>\r\n                        <table className='table table-borderless'>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th>Days Active: </th>\r\n                                            <td>{c.days_active}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th># Hearts: </th>\r\n                                            <td>{c.campaign_hearts}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th># Shares: </th>\r\n                                            <td>{c.social_share_total}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Auto Facebook Post: </th>\r\n                                            <td>{c.auto_fb_post_mode ? 'Yes' : 'No'}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Beneficiary: </th>\r\n                                            <td>{c.has_beneficiary ? 'Yes' : 'No'}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Is Charity: </th>\r\n                                            <td>{c.is_charity ? 'Yes' : 'No'}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Valid Charity: </th>\r\n                                            <td>{c.charity_valid ? 'Yes' : 'No'}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </bs.Col>\r\n                        <bs.Col>\r\n                            <h3 className='float-middle'><strong>Our Score: </strong></h3>\r\n                            <br></br>\r\n                            <CircularProgressbar\r\n                                value={c.c_rating}\r\n                                text={`${parseFloat(c.c_rating)}`}\r\n                                maxValue='10'\r\n                                background\r\n                                circleRatio='1'\r\n                                backgroundPadding={6}\r\n                                styles={buildStyles({\r\n                                backgroundColor: color,\r\n                                textColor: \"#fff\",\r\n                                pathColor: \"#fff\",\r\n                                trailColor: \"transparent\",\r\n                                textSize: '20px'\r\n                                })}\r\n                                                />\r\n                        </bs.Col>\r\n                    </bs.Row>\r\n                </bs.Container>\r\n            </>\r\n        )\r\n    }","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <>\r\n            <h1 className='text-center'>About</h1>\r\n            <br/>\r\n            <h3>Our Purpose</h3>\r\n            <p>As the world continues to deal with the worldwide pandemic of COVID-19, crowdfunding has grown in popularity.\r\n                An increasing number of campaigns are created everyday. However, not all of these cammpaigns are going to be successful.\r\n                Some, even, are fraudulent. How do you as a contributor know if a campaign you are thinking of donating to is honorable?\r\n                If you are creating a new campaign, how do you know if you will get the donations you need? How can you be sure not to be flagged \r\n                as fraudulent? That is where we come in. Using data of previous GoFundMe&reg; campgaigns, we use data analytics to help take away\r\n                some of these unknowns so that contributors and creators of campaigns can feel secure in their decisions to donate and ask for donations. \r\n            </p><br/>\r\n            <h3>Our Team</h3>\r\n            <br/>\r\n            <bs.Container>\r\n                <bs.Row>\r\n                    <bs.Col md='3' className='text-center'>\r\n                        <bs.Image src={`${process.env.PUBLIC_URL}/Sam.jpg`} height='150' roundedCircle></bs.Image>\r\n                        <br/><br/>\r\n                        <h5>Sam Cox</h5>\r\n                    </bs.Col>\r\n                    <bs.Col md='3' className='text-center'>\r\n                        <bs.Image src={`${process.env.PUBLIC_URL}/Sarah.jpg`} height='150' roundedCircle></bs.Image>\r\n                        <br/><br/>\r\n                        <h5>Sarah Fankhauser</h5>\r\n                    </bs.Col>\r\n                    <bs.Col md='3' className='text-center'>\r\n                        <bs.Image src={`${process.env.PUBLIC_URL}/Matt.jpg`} height='150' roundedCircle></bs.Image>\r\n                        <br/><br/>\r\n                        <h5>Matt Gardner</h5>\r\n                    </bs.Col>\r\n                    <bs.Col md='3' className='text-center'>\r\n                        <bs.Image src={`${process.env.PUBLIC_URL}/Spencer.jpg`} height='150' roundedCircle></bs.Image>\r\n                        <br/><br/>\r\n                        <h5>Spencer Millett</h5>\r\n                    </bs.Col>\r\n                </bs.Row>\r\n            </bs.Container>\r\n            <br/>\r\n        </>\r\n    );\r\n}","import React from 'react'\r\n\r\nexport default function Help(props) {\r\n    return (\r\n        <>\r\n            <h1 className='text-center'>Help</h1>\r\n            <br/>\r\n            <h3 className='text-center'>Confused? Have a suggestion? Let us know</h3>\r\n            <br/>\r\n        </>\r\n    );\r\n}","import React from 'react'\r\nimport axios from 'axios'\r\nimport * as bs from 'react-bootstrap'\r\nimport AppContext from './context'\r\nimport {useHistory} from 'react-router'\r\nimport { Formik, Form, Field } from 'formik'\r\n\r\n\r\nfunction LoginForm(props) {\r\n    return(\r\n        <LoginController/>\r\n    )\r\n}\r\nexport default LoginForm\r\n\r\nconst LoginController = props => {\r\n    const context = React.useContext(AppContext)\r\n    const history = useHistory()\r\n    const [theError, setError] = React.useState('')\r\n\r\n    return(\r\n        <div>\r\n            {/* <p className='text-danger'>{theError}</p> */}\r\n            <h1>Log in</h1>\r\n            <Formik\r\n                initialValues={{\r\n                    username: '',\r\n                    password: ''\r\n                }}\r\n                validateOnChange={false}\r\n                validateOnBlur={false}\r\n                validate={values => {\r\n                    const errors = {}\r\n                    if(values.username === '') {\r\n                        errors.username = 'Username cannot be blank'\r\n                    }\r\n                    if(values.password === '') {\r\n                        errors.password = 'Password cannot be blank'\r\n                    }\r\n                    return errors\r\n                }}\r\n                onSubmit={async (values, actions) => {\r\n                    axios.post('/token-auth/', {\r\n                        username: values.username,\r\n                        password: values.password,\r\n                        })\r\n                    .then((response) => {\r\n                        localStorage.setItem('token', response.data.token)\r\n                        axios.post('/api/user/', {\r\n                            username: response.data.user.username\r\n                        })\r\n                        .then(second => {\r\n                            setError('')\r\n                        context.login(second.data)\r\n                        history.push('/')\r\n                        })\r\n                        \r\n                    }, (error) => {\r\n                        setError('The Username or Password is incorrect')\r\n                    })\r\n\r\n                    }}\r\n                    >{form => (\r\n                        <Form>\r\n                            <Input \r\n                                type='text' \r\n                                placeholder='Enter Username' \r\n                                name='username'\r\n                                title='Username'/>\r\n                            <Input\r\n                                type='password' \r\n                                placeholder='Password'\r\n                                name='password'\r\n                                title='Password'/>\r\n                            <p className='text-danger'>{theError}</p>\r\n                            <bs.Button variant='primary' type='submit'>Submit</bs.Button>\r\n                        </Form>\r\n                    )}\r\n\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Input = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <bs.Form.Control\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                disabled={props.disable}\r\n                {...rProps.field}\r\n            />\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport AppContext from './context'\r\nimport {useHistory} from 'react-router'\r\nimport{Formik, Form, Field} from 'formik'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nfunction SignupForm(props) {\r\n    return(\r\n        <SignupController/>\r\n    )\r\n}\r\nexport default SignupForm\r\n\r\nconst SignupController = props => {\r\n    const context = React.useContext(AppContext)\r\n    const history = useHistory()\r\n    const [theError, setError] = React.useState('')\r\n\r\n    return(\r\n        <div>\r\n            {/* <p className='text-danger'>{theError}</p> */}\r\n            <h1>Sign up</h1>\r\n            <Formik\r\n                initialValues={{\r\n                    username: '',\r\n                    password: '',\r\n                    confirmpass: '',\r\n                    first_name: '',\r\n                    last_name: ''\r\n                }}\r\n                validateOnChange={false}\r\n                validateOnBlur={false}\r\n                validate={values => {\r\n                    const errors = {}\r\n                    if(values.username === '') {\r\n                        errors.username = 'Username cannot be blank'\r\n                    }\r\n                    if(values.password === '') {\r\n                        errors.password = 'Password cannot be blank'\r\n                    }\r\n                    if(values.confirmpass === '') {\r\n                        errors.confirmpass = 'Password cannot be blank'\r\n                    }\r\n                    if(values.first_name === '') {\r\n                        errors.first_name = 'Name cannot be blank'\r\n                    }\r\n                    if(values.last_name === '') {\r\n                        errors.last_name = 'Name cannot be blank'\r\n                    }\r\n                    if(values.confirmpass !== values.password) {\r\n                        errors.confirmpass = 'Passwords do not match'\r\n                    }\r\n                    return errors\r\n                }}\r\n                onSubmit={async (values, actions) => {\r\n                    axios.post('/api/users/', {\r\n                        username: values.username,\r\n                        password: values.password,\r\n                        first_name: values.first_name,\r\n                        last_name: values.last_name\r\n                        })\r\n                    .then((response) => {\r\n                        setError('')\r\n                        context.signup(response.data.first_name)\r\n                        localStorage.setItem('token', response.data.token)\r\n                        history.push('/')\r\n                    }, (error) => {\r\n                        setError('Username already exists')\r\n                    })\r\n\r\n                    }}\r\n                    >{form => (\r\n                        <Form>\r\n                            <bs.Form.Row>\r\n                                <bs.Col>\r\n                                    <Input \r\n                                        type='text' \r\n                                        placeholder='Enter First Name' \r\n                                        name='first_name'\r\n                                        title='First Name'/>\r\n                                </bs.Col>\r\n                                <bs.Col>\r\n                                    <Input \r\n                                        type='text' \r\n                                        placeholder='Enter Last Name' \r\n                                        name='last_name'\r\n                                        title='Last Name'/>\r\n                                </bs.Col>\r\n                            </bs.Form.Row>\r\n                            <Input \r\n                                type='text' \r\n                                placeholder='Enter Username' \r\n                                name='username'\r\n                                title='Username'/>\r\n                            <bs.Form.Row>\r\n                                <bs.Col>\r\n                                    <Input\r\n                                        type='password' \r\n                                        placeholder='Password'\r\n                                        name='password'\r\n                                        title='Password'/>\r\n                                </bs.Col>\r\n                                <bs.Col>\r\n                                    <Input\r\n                                        type='password' \r\n                                        placeholder='Password'\r\n                                        name='confirmpass'\r\n                                        title='Confirm Password'/>\r\n                                </bs.Col>\r\n                            </bs.Form.Row>\r\n                            <p className='text-danger'>{theError}</p>\r\n                            <bs.Button variant='primary' type='submit'>Submit</bs.Button>\r\n                        </Form>\r\n                    )}\r\n\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Input = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <bs.Form.Control\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                disabled={props.disable}\r\n                {...rProps.field}\r\n            />\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)\r\n","import React from 'react'\r\n\r\nexport default function Logout(props) {\r\n    return (\r\n        <>\r\n            <br/>\r\n            <h1>You have been Logged out</h1>\r\n            <br/><br/>\r\n            <p>Nulla non Lorem eu consequat quis cillum labore sunt in occaecat esse. Ipsum id in minim reprehenderit exercitation excepteur sit ex pariatur voluptate aliqua mollit aute incididunt. Ea excepteur Lorem ut sunt consectetur ut reprehenderit in. Reprehenderit officia id esse qui aliqua velit exercitation sunt voluptate nulla. Excepteur fugiat id ipsum fugiat irure et fugiat culpa velit laborum mollit ullamco et.</p>\r\n            <br/>\r\n        </>\r\n    );\r\n}","import React from 'react'\r\nimport axios from 'axios'\r\nimport * as bs from 'react-bootstrap'\r\n// import AppContext from './context'\r\n// import {useHistory} from 'react-router'\r\nimport { Formik, Form, Field } from 'formik'\r\n\r\nfunction Predict(props) {\r\n    return(\r\n        <PredictController/>\r\n    )\r\n}\r\nexport default Predict\r\n\r\nconst PredictController = props => {\r\n    // const history = useHistory()\r\n\r\n    return(\r\n        <div>\r\n            <h1>Prediction Calculator</h1>\r\n            <br/>\r\n            <Formik\r\n                initialValues={{\r\n                    title: '',\r\n                    description: '',\r\n                    auto_fb_post_mode: false,\r\n                    currencycode: 'USD',\r\n                    has_beneficiary: false,\r\n                    is_charity: false,\r\n                    charity_valid: false,\r\n                }}\r\n                validateOnChange={false}\r\n                validateOnBlur={false}\r\n                validate={values => {\r\n                    const errors = {}\r\n                    if(values.title === '') {\r\n                        errors.title = 'Title cannot be blank'\r\n                    }\r\n                    if(values.description === '') {\r\n                        errors.description = 'Description cannot be blank'\r\n                    }\r\n                    if(values.currencycode === '') {\r\n                        errors.currencycode = 'Currency code cannot be blank'\r\n                    }\r\n                    return errors\r\n                }}\r\n                onSubmit={async (values, actions) => {\r\n                    axios.post('/api/predict/', {\r\n                            title: values.title,\r\n                            description: values.description,\r\n                            auto_fb_post_mode: values.auto_fb_post_mode,\r\n                            currencycode: values.currencycode,\r\n                            has_beneficiary: values.has_beneficiary,\r\n                            is_charity: values.is_charity,\r\n                            charity_valid: values.charity_valid\r\n                        })\r\n                    .then((response) => {\r\n                        let theScore = 0\r\n                        if (parseInt(response.data.donor) < 2){\r\n                            theScore += 0\r\n                        }\r\n                        else if (parseInt(response.data.donor) < 10){\r\n                            theScore += 0.5\r\n                        }\r\n                        else if (parseInt(response.data.donor) < 25){\r\n                            theScore += 1\r\n                        }\r\n                        else if (parseInt(response.data.donor) < 50){\r\n                            theScore += 1.5\r\n                        }\r\n                        else if (parseInt(response.data.donor) < 100){\r\n                            theScore += 2\r\n                        }\r\n                        else if (parseInt(response.data.donor) < 200){\r\n                            theScore += 2.5\r\n                        }\r\n                        else if (parseInt(response.data.donor) < 500){\r\n                            theScore += 3\r\n                        }\r\n                        else if (parseInt(response.data.donor) < 1000){\r\n                            theScore += 3.5\r\n                        }\r\n                        else if (parseInt(response.data.donor) < 2000){\r\n                            theScore += 4\r\n                        }\r\n                        else if (parseInt(response.data.donor) < 10000){\r\n                            theScore += 4.5\r\n                        }\r\n                        else if (parseInt(response.data.donor) > 10000){\r\n                            theScore += 5\r\n                        }\r\n\r\n                        if (parseFloat(response.data.avg_donor) < 5){\r\n                            theScore += 0\r\n                        }\r\n                        else if (parseFloat(response.data.avg_donor) < 10) {\r\n                            theScore += 0.5\r\n                        }\r\n                        else if (parseFloat(response.data.avg_donor) < 15) {\r\n                            theScore += 1\r\n                        }\r\n                        else if (parseFloat(response.data.avg_donor) < 20) {\r\n                            theScore += 1.5\r\n                        }\r\n                        else if (parseFloat(response.data.avg_donor) < 30) {\r\n                            theScore += 2\r\n                        }\r\n                        else if (parseFloat(response.data.avg_donor) < 50) {\r\n                            theScore += 2.5\r\n                        }\r\n                        else if (parseFloat(response.data.avg_donor) < 75) {\r\n                            theScore += 3\r\n                        }\r\n                        else if (parseFloat(response.data.avg_donor) < 125) {\r\n                            theScore += 3.5\r\n                        }\r\n                        else if (parseFloat(response.data.avg_donor) < 200) {\r\n                            theScore += 4\r\n                        }\r\n                        else if (parseFloat(response.data.avg_donor) < 500) {\r\n                            theScore += 4.5\r\n                        }\r\n                        else if (parseFloat(response.data.avg_donor) > 500) {\r\n                            theScore += 5\r\n                        }\r\n                        \r\n                        let color = ''\r\n                        if (theScore < 5) {\r\n                            color = '#FF0000'\r\n                        }\r\n                        else if (theScore < 6) {\r\n                            color = '#FF8C00'\r\n                        }\r\n                        else if (theScore < 7) {\r\n                            color = '#FFC72B'\r\n                        }\r\n                        else if (theScore >= 7) {\r\n                            color = '#008000'\r\n                        }\r\n\r\n                        document.getElementById('thead').className = 'thead-dark'\r\n                        document.getElementById('head').innerHTML = `\"${values.title}\" &nbsp; &mdash; &nbsp; Campaign Predictions`\r\n                        document.getElementById('amount_head').innerHTML = 'Possible Collection Amount:'\r\n                        document.getElementById('amount').innerHTML = response.data.amount\r\n                        document.getElementById('donor_head').innerHTML = '# of Donors:'\r\n                        document.getElementById('donor').innerHTML = response.data.donor\r\n                        document.getElementById('avg_head').innerHTML = 'Average Donation Amount:'\r\n                        document.getElementById('avg').innerHTML = response.data.avg_donor\r\n                        document.getElementById('score').innerHTML = '<h2>Score</h2> '\r\n                        document.getElementById('scorehead').className = 'thead-dark'\r\n                        document.getElementById('rating').innerHTML = `<span style=\"color: ${color}; font-weight: 600; font-size:5rem\">${theScore}</span> / 10`\r\n                        // document.getElementById('rating').style = `color: ${color}`\r\n\r\n                        window.scrollTo(0,document.body.scrollHeight);\r\n                    },)\r\n\r\n                    }}\r\n                    >{form => (\r\n                        <Form>\r\n                            <div className='row'>\r\n                                <div className='col'>\r\n                                    <Input \r\n                                        type='text' \r\n                                        placeholder='Title' \r\n                                        name='title'\r\n                                        title='Campaign Title'/>\r\n                                    <Field name='description'>{rProps => (\r\n                                        <bs.Form.Group>\r\n                                            <bs.Form.Label>Description</bs.Form.Label>&nbsp;&nbsp;\r\n                                            <bs.Form.Control \r\n                                                as='textarea' \r\n                                                name='description'\r\n                                                placeholder='Description'\r\n                                                title='Description'\r\n                                                {...rProps.field}\r\n                                                 />\r\n                                            {rProps.meta.touched && rProps.meta.error &&\r\n                                                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n                                            }\r\n                                        </bs.Form.Group>\r\n                                    )}</Field>\r\n                                    <Field name='auto_fb_post_mode'>{rProps => (\r\n                                        <bs.Form.Group>\r\n                                            <bs.Form.Check\r\n                                                type='checkbox'\r\n                                                inline\r\n                                                {...rProps.field}\r\n                                                />\r\n                                            <bs.Form.Label>Auto Facebook Post</bs.Form.Label>&nbsp;&nbsp;\r\n                                        </bs.Form.Group>\r\n                                    )}</Field>\r\n                                </div>\r\n                                <div className='col'>\r\n                                    <Field name='currencycode'>{rProps => (\r\n                                        <bs.Form.Group>\r\n                                            <bs.Form.Label>Currency</bs.Form.Label>&nbsp;&nbsp;\r\n                                            <bs.Form.Control as='select'>\r\n                                                <option>USD</option>\r\n                                                <option>CAD</option>\r\n                                                <option>GBP</option>\r\n                                                <option>EUR</option>\r\n                                                <option>AUD</option>\r\n                                                <option>CHF</option>\r\n                                                <option>SEK</option>\r\n                                                <option>DKK</option>\r\n                                                <option>NOK</option>\r\n                                            {rProps.meta.touched && rProps.meta.error &&\r\n                                                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n                                            }\r\n                                            </ bs.Form.Control>\r\n                                        </bs.Form.Group>\r\n                                    )}</Field>\r\n                                    <Field name='has_beneficiary'>{rProps => (\r\n                                        <bs.Form.Group>\r\n                                            <bs.Form.Check\r\n                                                type='checkbox'\r\n                                                inline\r\n                                                {...rProps.field}\r\n                                                />\r\n                                            <bs.Form.Label>Has beneficiary</bs.Form.Label>&nbsp;&nbsp;\r\n                                            {rProps.meta.touched && rProps.meta.error &&\r\n                                                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n                                            }\r\n                                        </bs.Form.Group>\r\n                                    )}</Field>\r\n                                    <Field name='is_charity'>{rProps => (\r\n                                        <bs.Form.Group>\r\n                                            <bs.Form.Check\r\n                                                type='checkbox'\r\n                                                inline\r\n                                                {...rProps.field}\r\n                                                />\r\n                                            <bs.Form.Label>Is Charity</bs.Form.Label>&nbsp;&nbsp;\r\n                                            {rProps.meta.touched && rProps.meta.error &&\r\n                                                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n                                            }\r\n                                        </bs.Form.Group>\r\n                                    )}</Field>\r\n                                    <Field name='charity_valid'>{rProps => (\r\n                                        <bs.Form.Group>\r\n                                            <bs.Form.Check\r\n                                                type='checkbox'\r\n                                                inline\r\n                                                {...rProps.field}\r\n                                                />\r\n                                            <bs.Form.Label>Valid Charity</bs.Form.Label>&nbsp;&nbsp;\r\n                                            {rProps.meta.touched && rProps.meta.error &&\r\n                                                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n                                            }\r\n                                        </bs.Form.Group>\r\n                                    )}</Field>\r\n                                </div>\r\n                            </div>\r\n                            <bs.Button variant='success' type='submit' className='float-right'>Calculate</bs.Button>\r\n                        </Form>\r\n                    )}\r\n            </Formik>\r\n            <br/><br/><br/><hr/><br/>\r\n            <div className='row'>\r\n                <div className='col-md-8'>\r\n                    <table className='table table-borderless'>\r\n                        <thead id='thead'>\r\n                            <tr>\r\n                                <th id='head'></th>\r\n                            </tr>\r\n                            <tr></tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th id='amount_head'></th>\r\n                                <td id='amount'></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th id='donor_head'></th>\r\n                                <td id='donor'></td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th id='avg_head'></th>\r\n                                <td id='avg'></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className='col-md-4 text-center' >\r\n                    {/* <br/> */}\r\n                    <table className='table table-borderless'>\r\n                        <thead id='scorehead'>\r\n                            <tr>\r\n                                <th id='score'></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td id='rating'></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <br/>\r\n                </div>\r\n            </div>\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nconst Input = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <bs.Form.Control\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                disabled={props.disable}\r\n                {...rProps.field}\r\n            />\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)\r\n","import React from 'react';\r\nimport * as bs from 'react-bootstrap'\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport Header from './Header.js'\r\nimport Footer from './Footer'\r\nimport Home from './Home'\r\nimport Left from './Left'\r\nimport CampaignDetails from './campaign-details'\r\nimport About from './about'\r\nimport Help from './help'\r\nimport LoginForm from './LoginForm';\r\nimport SignupForm from './SignupForm';\r\nimport Logout from './LogoutPage'\r\nimport Predict from './predict'\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <bs.Container fluid className='p-0 min-vh-100 d-flex flex-column'>\r\n        <bs.Row noGutters className='top-bg flex-grow-0 flex-shrink-0 shadow-sm'>\r\n          <bs.Col>\r\n            <Header />\r\n          </bs.Col>\r\n        </bs.Row>\r\n        <bs.Row noGutters>\r\n          <bs.Col md='2' className='p-3 border-right shadow-right bg-white rounded'>\r\n            <Left />\r\n          </bs.Col>\r\n          <bs.Col md='9' className='p-4 body-bg'>\r\n            <Switch>\r\n              <Route path='/predict'>\r\n                <Predict />\r\n              </Route>\r\n              <Route path='/about'>\r\n                <About />\r\n              </Route>\r\n              <Route path='/logout'>\r\n                <Logout/>\r\n              </Route>\r\n              <Route path='/help'>\r\n                <Help />\r\n              </Route>\r\n              <Route path='/login' component={LoginForm}>\r\n              </Route>\r\n              <Route path='/signup' component={SignupForm}>\r\n              </Route>\r\n              <Route path='/campaign/:cid'>\r\n                <CampaignDetails />\r\n              </Route>\r\n              <Route path='/'>\r\n                <Home />\r\n              </Route>\r\n            </Switch>\r\n          </bs.Col>\r\n          <bs.Col md='1' className='p-3 body-bg'>\r\n          </bs.Col>\r\n        </bs.Row>\r\n        <bs.Row noGutters >\r\n          <bs.Col>\r\n            <Footer />\r\n          </bs.Col>\r\n        </bs.Row>\r\n      </bs.Container>\r\n    </Router>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport AppContext from './context'\r\nimport App from './App'\r\nimport axios from 'axios'\r\nimport produce from 'immer'\r\n\r\n/** The context provider for our app */\r\nexport default class AppProvider extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.actions = {\r\n            login: this.login,\r\n            signup: this.signup,\r\n            handle_logout: this.handle_logout,\r\n            display_form: this.display_form,\r\n            setCampaigns: this.setCampaigns\r\n\r\n        }\r\n        this.state = {\r\n            displayed_form: '',\r\n            logged_in: localStorage.getItem('token') ? true : false,\r\n            username: '',\r\n            campaigns: [],\r\n            num_camps: 0,\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const campaigns = await axios.get('/api/campaigns/')\r\n        console.log(campaigns.data)\r\n        if(this.state.logged_in) {\r\n            fetch('/api/current_user/', {\r\n                headers: {\r\n                    Authorization: `JWT ${localStorage.getItem('token')}`\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                this.setState({username: json.first_name})\r\n            })\r\n            this.setState({\r\n                ...this.state,\r\n                campaigns: campaigns.data,\r\n                num_camps: campaigns.data.length\r\n            })\r\n        }\r\n    }\r\n\r\n    setCampaigns = (data) => {\r\n        console.log(data.length) \r\n        this.setState(state => produce(state, draft => {\r\n            draft.campaigns = data\r\n            draft.num_camps = data.length\r\n\r\n        }))\r\n    }\r\n\r\n    login = (user) => {\r\n        this.setState({\r\n            logged_in: true,\r\n            username: user.first_name})\r\n    }\r\n\r\n    signup = (user) => {\r\n        this.setState({\r\n            logged_in: true,\r\n            username: user})\r\n    }\r\n\r\n    handle_logout = () => {\r\n        console.log('hello')\r\n        localStorage.removeItem('token')\r\n        this.setState({logged_in: false, username: ''})\r\n    }\r\n\r\n    display_form = form => {\r\n        this.setState({\r\n            display_form: form\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <AppContext.Provider value={{...this.state, ...this.actions}}>\r\n                <App />\r\n            </AppContext.Provider>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\nimport AppProvider from './context-provider';\r\n\r\nReactDOM.render(\r\n  <AppProvider />, document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}